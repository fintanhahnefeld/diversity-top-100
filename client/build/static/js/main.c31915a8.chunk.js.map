{"version":3,"sources":["components/Component1.js","components/TransButton.js","components/Styleguide.js","components/CompanyRow.js","services/auth.js","components/CompaniesList.js","components/Signup.js","components/Chart.js","components/CompanyTable.js","components/CompanyDetails.js","services/users.js","components/EditProfile.js","components/Logout.js","components/Login.js","components/Or.js","services/userCompanies.js","components/RegisterUserCompany.js","components/UserCompany.js","App.js","reportWebVitals.js","index.js"],"names":["Component1","props","useSpring","to","opacity","from","className","c1Style","div","style","background","color","padding","TransButton","useState","open","toggle","useMeasure","ref","width","buttonProp","size","display","alignItems","height","justifyContent","position","cursor","backgroundColor","overflow","onMouseMove","positon","top","left","fillColor","textColor","text","Styleguide","class","role","type","value","Component","CompanyRow","averageScore","company","diversity_total","growth_score","opportunity_score","graph","animate","config","tension","mass","friction","velocity","precision","fontSize","fontWeight","minWidth","border","company_name","toFixed","_id","axios","require","Signup","firstName","setFirstName","lastName","setLastName","email","setEmail","setCompany","password","setPassword","message","setMessage","user","id","onSubmit","e","preventDefault","post","then","response","data","catch","err","signup","console","log","setUser","htmlFor","name","onChange","target","required","placeholder","Chart","state","chartData","labels","datasets","hoverBackgroundColor","borderWidth","this","eight","options","responsive","maintainAspectRatio","rotation","Math","PI","circumference","legend","CompanyTable","number_employees","href","url_linkedIn","CompanyDetails","getData","get","match","params","setState","dataFetched","status","error","diversityScore","LinkedinShareButton","url","title","LinkedinIcon","round","WhatsappShareButton","WhatsappIcon","TwitterShareButton","TwitterIcon","Editprofile","useEffect","put","update","Logout","handleLogout","delete","onClick","Login","logEmail","setLogEmail","logPassword","setLogPassword","Or","RegisterUserCompany","urlLinkedin","setUrlLinkedin","url_linkedin","setUserCompany","UserCompany","userCompany","App","companies","setCompanies","userId","userCompaniesFromDB","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c31915a8.chunk.js","sourcesContent":["import React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\nexport default function Component1() {\n  const props = useSpring({ to: { opacity: 1 }, from: { opacity: 0 } })\n\n  return (\n    <div className={c1Style}>\n      <animated.div style={props}>I will fade in</animated.div>\n    </div>\n  )\n}\n\nconst c1Style = {\n  background: 'steelblue',\n  color: 'white',\n  padding: '1.5rem',\n}\n","import React, { useState } from 'react'\nimport useMeasure from 'react-use-measure'\nimport { useSpring, animated } from 'react-spring'\n// import styles from '../components/styles.module.css'\n\nexport default function TransButton(props) {\n  const [open, toggle] = useState(false)\n  const [ref, { width }] = useMeasure()\n  const buttonProp = useSpring({ width: open ? width : 0 })\n\n  return (\n    <div className={props.size}>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        <div\n          ref={ref}\n          style={{\n            position: 'relative',\n            width: '100%',\n            height: '100%',\n            cursor: 'pointer',\n            backgroundColor: `${props.backgroundColor}`,\n            overflow: 'hidden',\n          }}\n          onMouseMove={() => toggle(!open)}\n        >\n          <animated.div\n            style={{\n              positon: 'absolute',\n              top: '0',\n              left: '0',\n              width: '100%',\n              height: '100%',\n              background: `${props.fillColor}`,\n              ...buttonProp,\n            }}\n          />\n          <animated.div\n            style={{\n              position: 'absolute',\n              top: '0',\n              left: '0',\n              width: '100%',\n              height: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              color: `${props.textColor}`,\n            }}\n          >\n            {/* {prop.width.to((x) => x.toFixed(0))} */}\n            {props.text}\n          </animated.div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport Component1 from './Component1'\nimport TransButton from './TransButton'\n\nexport default class Styleguide extends Component {\n  render() {\n    return (\n      <>\n        <h1>React-Spring Components</h1>\n        <br />\n        <Component1 />\n        <TransButton\n          text={'Button'}\n          size={'tw-w-4/12 tw-h-12'}\n          backgroundColor={'#f59e0b'}\n          fillColor={'#2563eb'}\n          // textColor={'#272727'}\n          textColor={'white'}\n        />\n        <br />\n        <h1 class='tw-text-imagineText'>Imagine Foundation Style Guide</h1>\n        <br />\n        <h1>h1: Imagine Foundation</h1>\n        <br />\n        <h2>h2: Imagine Foundation</h2>\n        <br />\n        <h3>h3: Imagine Foundation</h3>\n        <br />\n        <h4>h4: Imagine Foundation</h4>\n        <br />\n        <p>p: Imagine Foundation</p>\n        <br />\n        <p class='tw-text-sm'>text-sm</p>\n        <br />\n        <p class='tw-text-xs'>text-xs</p>\n        <br />\n        <div className='tw-font-tagline tw-text-6xl tw-font-bold '>\n          Diversity = Opportunity\n        </div>\n        <br />\n        <button className='tw-h-10 tw-px-5 tw-text-indigo-700 tw-transition-colors tw-duration-150 tw-border tw-border-indigo-500 tw-rounded-lg focus:tw-shadow-outline hover:tw-bg-indigo-500 hover:tw-text-indigo-100'>\n          Outline\n        </button>\n        <br />\n        <br />\n        <button className='tw-h-10 tw-px-5 tw-text-indigo-100 tw-transition-colors tw-duration-150 tw-bg-indigo-700 tw-rounded-full focus:tw-shadow-outline hover:tw-bg-indigo-800'>\n          Pill button\n        </button>\n        <br />\n        <br />\n        <div\n          className='tw-max-w-md tw-px-4 tw-py-3 tw-leading-normal tw-text-blue-700 tw-bg-blue-100 tw-rounded-lg'\n          role='alert'\n        >\n          <p>A simple alert with text</p>\n        </div>\n        <br />\n        <label className='tw-text-gray-700'>\n          <input type='checkbox' value='' />\n          <span className='tw-ml-1'>Lorem ipsum dolor sit</span>\n        </label>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <h1>Grids</h1>\n        <div className='tw-bg-blue-400 tw-min-h-screen tw-flex tw-items-center tw-justify-items-center'>\n          <h2>Grid 1</h2>\n          <div className='tw-grid tw-grid-cols-1 md:tw-grid-cols-2 lg:tw-grid-cols-3 tw-gap-4'>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>1</div>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>2</div>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>3</div>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>4</div>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>5</div>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>6</div>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>7</div>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>8</div>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>9</div>\n          </div>\n          <h2>Grid2</h2>\n          <div className='tw-grid tw-grid-cols-1 md:tw-grid-cols-2 lg:tw-grid-cols-3 tw-gap-4'>\n            <div className='tw-col-span-2 tw-bg-white tw-p-3 tw-rounded'>1</div>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>2</div>\n            <div className='tw-row-span-3 tw-bg-white tw-p-3 tw-rounded'>3</div>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>4</div>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>5</div>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>6</div>\n            <div className='tw-col-span-2 tw-bg-white tw-p-3 tw-rounded'>7</div>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>8</div>\n            <div className='tw-bg-white tw-p-3 tw-rounded'>9</div>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <h1>Responsive ( check diff. screen size )</h1>\n        <div className='tw-min-h-screen tw-bg-yellow-300 tw-p-10'>\n          <div className='tw-space-y-10 md:tw-space-y-0 md:tw-grid md:tw-grid-cols-2'>\n            {/* left */}\n            <div className='md:tw-flex md:tw-flex-col md:tw-justify-center'>\n              <h2 className='tw-text-black tw-text-2xl md:tw-text-4xl lg:tw-text-6xl tw-font-bold tw-mb-4'>\n                Whoa Responsive\n              </h2>\n              <p className='md:tw-text-lg tw-text-gray-900'>\n                Responsive can be done using Tailwind!\n              </p>\n            </div>\n            {/* right */}\n            <div className=''>\n              <div className='tw-w-full tw-h-64 tw-rounded-lg tw-shadow-2xl tw-bg-black'>\n                hi\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n","import React, { useEffect } from 'react';\nimport { useSpring, animated } from 'react-spring';\n\n\nexport default function CompanyRow(props) {\n  \n  const averageScore = ((props.company.diversity_total + props.company.growth_score + props.company.opportunity_score) / 3);\n  const graph = (averageScore - 2.8) * 100\n\n  // useEffect(() => {\n  //   (window.innerWidth / 3.57) * (averageScore -2.5)\n  // })\n  // BETWEEN 2.83 AND 3.57\n\n  // (overallScore * 200) - 500\n\n  const animate = useSpring({\n    from: { opacity: 0, width: '0vw' },\n    to: { opacity: 1, width: `${graph}vw`},\n    config:\n    {\n      // duration: 1000,\n      tension: 50,\n      mass: 2,\n      friction: 26,\n      velocity: 0,\n      precision: 0.01\n    }\n  })\n\n  const scoreStyle = {\n    fontSize: '8px',\n    fontWeight: '900',\n    backgroundColor: '#e0296c',\n    color: 'white',\n    border: '1px solid #e0296c',\n    padding: '0.4rem',\n    // width: '60%'\n  }\n\n  const nameStyle = {\n    fontSize: '10px',\n    fontWeight: '900',\n    width: '150px',\n    minWidth: '150px',\n    border: '1px solid black',\n    padding: '0.4rem',\n  }\n\n  return (\n    \n    <div className=\"tw-flex tw-items-center tw-justify-start tw-m-4\" key={props.company._id}>\n\n        <h3 style={nameStyle} className=\"tw-text-imagineText\">{props.company.company_name}</h3>      \n        \n        <animated.div style={animate}>\n        <h3 style={scoreStyle}>{averageScore.toFixed(2)}</h3> \n        </animated.div>\n    </div>\n    \n  )\n} \n","const axios = require('axios')\n\nconst signup = (email, firstName, lastName, company, password) => {\n  return axios\n    .post('/api/auth/signup', {\n      email,\n      firstName,\n      lastName,\n      company,\n      password,\n    })\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\nconst login = (email, password) => {\n  console.log('email' + email)\n  return axios\n    .post('/api/auth/login', {\n      email,\n      password,\n    })\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\nconst logout = () => {\n  return axios\n    .delete('/api/auth/logout')\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\nexport { signup, logout, login }\n","import React, { Component } from 'react'\nimport CompanyRow from './CompanyRow'\nimport { Link } from 'react-router-dom';\n\n\nexport class CompaniesList extends Component {\n\n  state = {\n    displayAll: false\n  }\n\n  clickHandler = () => {\n    console.log('click')\n    this.setState((state) => ({\n      displayAll: !this.state.displayAll\n    }))\n  }\n\n  render() {\n    //THIS IS THE LOGIC TO CALCULATE THE TOP 100\n    const top100 = this.props.companies.sort((a, b) => {\n      let aAvg = (a.diversity_total + a.growth_score + a.opportunity_score) / 3;\n      let bAvg = (b.diversity_total + b.growth_score + b.opportunity_score) / 3;\n      if (aAvg > bAvg) {\n        return -1;\n      }\n      if (aAvg < bAvg) {\n        return 1;\n      }\n      return 0;      \n      }).splice(0, this.state.displayAll ? 100 : 10);\n    \n    \n    return (\n      \n      <div >\n        \n        {top100.map((company) => (\n          <Link to={`/companies/${company._id}`}>\n            <CompanyRow company={company} />\n          </Link>\n        ))}\n\n        {this.state.displayAll === false &&\n          <button onClick={this.clickHandler} className=\"tw-text-imagineText tw-object-left\">see more</button>}\n        \n        {this.state.displayAll === true &&\n          <button onClick={this.clickHandler} className=\"tw-text-imagineText tw-object-left\">see less</button>}\n        \n      </div>\n    )\n  }\n}\n\nexport default CompaniesList\n","import React, { useState } from 'react'\nimport { signup } from '../services/auth'\n\nexport default function Signup(props) {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [company, setCompany] = useState('')\n  const [password, setPassword] = useState('')\n  const [message, setMessage] = useState()\n\n  const clearAllFields = () => {\n    setMessage('')\n    setFirstName('')\n    setLastName('')\n    setEmail('')\n    setCompany('')\n    setPassword('')\n  }\n\n  const handleSignup = (e) => {\n    e.preventDefault()\n    signup(email, firstName, lastName, company, password).then((response) => {\n      if (response.message) {\n        console.log(response)\n        setMessage(response.message)\n      } else {\n        clearAllFields()\n        // we now put the user in the state of App.js\n        props.setUser(response)\n\n        // props.history.push('/xxx')\n      }\n    })\n  }\n\n  const style = {\n    input: 'tw-text-blue-600 tw-border tw-border-blue-600 tw-p-1',\n    label: 'tw-text-blue-600 tw-text-xs tw-text-left tw-leading-loose',\n  }\n\n  if (props.user) return <></>\n  return (\n    <div>\n      <div id='signup' className='tw-w-full md:tw-w-4/12 tw-px-5'>\n        <h1 className='tw-text-blue-600 tw-text-left'>Signup</h1>\n        <form className='tw-flex tw-flex-col' onSubmit={handleSignup}>\n          <label className={style.label} htmlFor='firstName'>\n            First Name\n          </label>\n          <input\n            className={style.input}\n            type='text'\n            name='firstName'\n            id='firstName'\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n            required\n          />\n          <label className={style.label} htmlFor='firstName'>\n            Last Name\n          </label>\n          <input\n            className={style.input}\n            type='text'\n            name='lastName'\n            id='lastName'\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n            required\n          />\n          <label className={style.label} htmlFor='email'>\n            Email\n          </label>\n          <input\n            className={style.input}\n            type='text'\n            name='email'\n            id='email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <label className={style.label} htmlFor='company'>\n            Company\n          </label>\n          <input\n            className={style.input}\n            type='text'\n            name='company'\n            id='company'\n            value={company}\n            onChange={(e) => setCompany(e.target.value)}\n          />\n          <label className={style.label} htmlFor='firstName'>\n            Password\n          </label>\n          <input\n            className={style.input}\n            type='password'\n            id='password'\n            name='password'\n            placeholder=''\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <button\n            className='tw-bg-yellow-500 tw-text-blue-600 tw-py-5 tw-mt-5 md:tw-w-1/2'\n            type='submit'\n          >\n            Sign Up\n          </button>\n          {message && <h3>{message}</h3>}\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\n\n\nexport default class Chart extends Component {\n\n  constructor(props){\n    super(props)\n    \n    this.state = {\n      chartData:{\n        labels: [\n          \"Diversity\",\n          \"Opportunity\",\n          \"Growth\"\n      ],\n      datasets: [\n          {\n               data: [this.props.company.diversity_total, this.props.company.growth_score, this.props.company.opportunity_score],\n            \n              backgroundColor: [\n                  \"#E0296C\",\n                  \"#3C7695\",\n                  \"#954E8B\"\n              ],\n              hoverBackgroundColor: [\n                  \"#EC6A8E\",\n                  \"#56B39E\",\n                  \"#F7A559\"\n              ],\n              borderWidth: 2\n          }]\n      }\n    }\n  }\n\n \n  render() {\n    //  console.log(this.state.props.company)\n    \n    return (\n     \n      <div className=\"chart\" style={{width:\"100%\",height:\"100%\"}}>\n\n          <Doughnut\n            data={this.state.chartData}\n            width={100}\n\t          eight={50}\n            \n            \n\n            options={{\n             \n               responsive: true,\n                maintainAspectRatio: false,\n                rotation: 86 * Math.PI,\n                circumference: 57 * Math.PI,\n                 legend: {\n                   display: false,\n                   position: 'right'\n                 }\n                }}   \n             \n          />\n        \n      </div>\n    )\n  }\n}\n\n////////////////////////////////\n\n// import React from 'react'\n// import { Pie } from 'react-chartjs-2'\n\n// //defaults.global.tooltips.enabled = false\n// //defaults.global.legend.position = 'bottom'\n\n// const Chart = () => {\n//   return (\n//     <div>\n//       <Pie\n//         data={{\n//           labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n//           datasets: [\n//             {\n//               label: '# of votes',\n//               data: [12, 19, 3, 5, 2, 3],\n//               backgroundColor: [\n//                 'rgba(255, 99, 132, 0.2)',\n//                 'rgba(54, 162, 235, 0.2)',\n//                 'rgba(255, 206, 86, 0.2)',\n//                 'rgba(75, 192, 192, 0.2)',\n//                 'rgba(153, 102, 255, 0.2)',\n//                 'rgba(255, 159, 64, 0.2)',\n//               ],\n//               borderColor: [\n//                 'rgba(255, 99, 132, 1)',\n//                 'rgba(54, 162, 235, 1)',\n//                 'rgba(255, 206, 86, 1)',\n//                 'rgba(75, 192, 192, 1)',\n//                 'rgba(153, 102, 255, 1)',\n//                 'rgba(255, 159, 64, 1)',\n//               ],\n//               borderWidth: 1,\n//             },\n//             // {\n//             //   label: 'Quantity',\n//             //   data: [47, 52, 67, 58, 9, 50],\n//             //   backgroundColor: 'orange',\n//             //   borderColor: 'red',\n//             // },\n//           ],\n//         }}\n//         height={400}\n//         width={600}\n//         options={{\n//           maintainAspectRatio: false,\n//           scales: {\n//             yAxes: [\n//               {\n//                 ticks: {\n//                   beginAtZero: true,\n//                 },\n//               },\n//             ],\n//           },\n//           legend: {\n//             labels: {\n//               fontSize: 25,\n//             },\n//           },\n//         }}\n//       />\n//     </div>\n//   )\n// }\n\n// export default Chart\n\n\n\n/////////////////////////////////////////////////Example Ahmed////////////////////////\n// import React, { Component } from 'react';\n// import Chart from \"chart.js\";\n// export default class PieChart extends Component {\n//   chartRef = React.createRef();\n//   state = {\n//     myChartRef: undefined,\n//   }\n//   componentDidMount() {\n//     this.setState({\n//       myChartRef: this.chartRef.current.getContext(\"2d\")\n//     })\n//   }\n//   render() {\n//     if(this.state.myChartRef && this.props.symbolsPrice && this.props.portfolio.length !== 0) \n//     {\n//       const labels = Object.keys(this.props.symbolsPrice);  \n//       const valueArray = this.props.portfolio.map(element => {\n//         return ((element.count) * this.props.symbolsPrice[element.ticker])\n//       })\n//       const sum = valueArray.reduce((a, b) => a + b, 0);\n//       const data = valueArray.map(element => {\n//         return ((element / sum)*100).toFixed(2);\n//       })\n//       let colorsArray = this.props.portfolio.map(element => {\n//         let r = Math.floor(Math.random() * 200);\n//         let g = Math.floor(Math.random() * 200);\n//         let b = Math.floor(Math.random() * 200);\n//         return('rgb(' + r + ', ' + g + ', ' + b + ')')\n//       })\n//       this.state.myChart = new Chart(this.state.myChartRef, {\n//         type: \"doughnut\",\n//         data: {\n//             datasets: [\n//                 {\n//                   data: data,\n//                   backgroundColor: colorsArray, \n//                 }\n//             ],\n//             labels: labels\n//         },\n//         options: {\n//           responsive: true,\n//           maintainAspectRatio: true,\n//           legend: {\n//             labels: {\n//               fontColor: \"white\",\n//               fontSize: 18\n//             }\n//           }\n//         }\n//       });\n//     }\n//     return (\n//       <div style={{width: \"45vw\", height: \"auto\"}} className=\"ml-3 mr-4 border p-3 border-white shadow p-3 mb-5 bg-body rounded\">\n//         <h4 className='mb-3'>Portfolio Distribution %</h4>\n//         <div>\n//             <canvas style={{width: \"40vw\", height: \"23vh\"}} id=\"myChart\" ref={this.chartRef}/>\n//         </div>\n//       </div>\n//     )\n//   }\n// }","import React from 'react'\n\nexport default function CompanyTable(props) {\n  return (\n    <>\n      <div className='tw-flex tw-items-center tw-justify-center'>\n        <div className='tw-container tw-max-w-sm tw-overflow-auto'>\n          <table className='tw-relative tw-w-full'>\n            <tbody className='tw-divide-y'>\n              <tr className='hover:tw-bg-red-50'>\n                <td className='tw-px-6 tw-py-4 tw-text-left tw-font-bold'>\n                  Company Name\n                </td>\n                <td className='tw-px-6 tw-py-4 tw-text-left'>\n                  {props.company.company_name}\n                </td>\n              </tr>\n              <tr className='hover:tw-bg-red-50'>\n                <td className='tw-px-6 tw-py-4 tw-text-left tw-font-bold'>\n                  Employees\n                </td>\n                <td className='tw-px-6 tw-py-4 tw-text-left'>\n                  {props.company.number_employees}\n                </td>\n              </tr>\n              <tr className='hover:tw-bg-red-50'>\n                <td className='tw-px-6 tw-py-4 tw-text-left tw-font-bold'>\n                  Linkedin\n                </td>\n                <td className='tw-px-6 tw-py-4 tw-text-left'>\n                  {' '}\n                  <a href={props.company.url_linkedIn}>Click here</a>\n                </td>\n              </tr>\n              <tr className='hover:tw-bg-red-50'>\n                <td className='tw-px-6 tw-py-4 tw-text-left tw-font-bold'>\n                  Diversity Score\n                </td>\n                <td className='tw-px-6 tw-py-4 tw-text-left'>\n                  {' '}\n                  {props.company.diversity_total}\n                </td>\n              </tr>\n              <tr className='hover:tw-bg-red-50'>\n                <td className='tw-px-6 tw-py-4 tw-text-left tw-font-bold'>\n                  Opportunity Score\n                </td>\n                <td className='tw-px-6 tw-py-4 tw-text-left'>\n                  {' '}\n                  {props.company.opportunity_score}\n                </td>\n              </tr>\n              <tr className='hover:tw-bg-red-50'>\n                <td className='tw-px-6 tw-py-4 tw-text-left tw-font-bold'>\n                  Growth Score\n                </td>\n                <td className='tw-px-6 tw-py-4 tw-text-left'>\n                  {props.company.growth_score}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Chart from './Chart.js';\nimport CompanyTable from './CompanyTable.js';\nimport { LinkedinShareButton, WhatsappShareButton, TwitterShareButton} from 'react-share';\nimport { LinkedinIcon, WhatsappIcon, TwitterIcon } from 'react-share';\n\nexport default class CompanyDetails extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      company: {},\n      diversityScore: {},\n      dataFetched: false,\n    }\n  }\n\n  getData = () => {\n    axios\n      .get(`/api/companies/${this.props.match.params.id}`)\n      .then((response) => {\n        // console.log(response.data);\n        this.setState({\n          company: response.data,\n          dataFetched: true,\n          // this unsets the flag when the data is available\n          // dataRequested: false\n        })\n      })\n      .catch((err) => {\n        console.log(err)\n        if (err.response.status === 404) {\n          this.setState({\n            error: 'Not found 🤷‍♀️🤷‍♂️',\n          })\n        }\n      })\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  render() {\n    if (this.state.dataFetched) {\n      console.log('CompanyDetails', this.state.company)\n      return (\n        <>\n          <div className='tw-mt-8'>\n            <h1> {this.state.company.company_name}</h1>\n            <Chart company={this.state.company} />\n          </div>\n\n          <div>\n            <CompanyTable company={this.state.company} />\n          </div>\n\n        \n\n          <div className='tw-flex tw-justify-center'>\n          <div className='tw-mx-4'>\n            <LinkedinShareButton\n              url = {\n                `http://findunity.herokuapp.com/`\n                // `http://most-diverse-100/companies/${this.state.company._id}.herokuapp.com/`\n              } \n               title = { `${this.state.company} is part of the most diverse 100 companies ranking of imagine foundation`}\n              >\n              <LinkedinIcon size={35} round={true} />\n              </LinkedinShareButton>\n              </div>\n\n              <div className='tw-mx-4'>\n              <WhatsappShareButton\n              url = {\n                `http://findunity.herokuapp.com/`\n                // `http://most-diverse-100/companies/${this.state.company._id}.herokuapp.com/`\n              } \n               title = { `${this.state.company} is part of the most diverse 100 companies ranking of imagine foundation`}\n              >\n              <WhatsappIcon size={35} round={true} />\n              </WhatsappShareButton>\n              </div>\n              \n              <div className='tw-mx-4'>\n              <TwitterShareButton\n              url = {\n                `http://findunity.herokuapp.com/`\n                // `http://most-diverse-100/companies/${this.state.company._id}.herokuapp.com/`\n              } \n               title = {`${this.state.company} is part of the most diverse 100 companies ranking of imagine foundation`}\n              >\n              <TwitterIcon size={35} round={true} />\n              </TwitterShareButton>\n              </div>\n\n          </div>\n        </>\n      )\n    } else {\n      return null\n    }\n  }\n}\n","const axios = require('axios')\n\nconst update = (id, email, firstName, lastName, company, password) => {\n  return axios\n    .put(`/api/users/${id}`, {\n      email,\n      firstName,\n      lastName,\n      company,\n      password,\n    })\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\nexport { update }\n","import React, { useState, useEffect } from 'react'\nimport { update } from '../services/users'\n\nexport default function Editprofile(props) {\n  const [firstName, setFirstName] = useState(() => {\n    return props ? props.user.firstName : ''\n  })\n  const [lastName, setLastName] = useState(() => {\n    return props ? props.user.lastName : ''\n  })\n  const [email, setEmail] = useState(() => {\n    return props ? props.user.email : ''\n  })\n  const [company, setCompany] = useState(() => {\n    return props ? props.user.company : ''\n  })\n  const [password, setPassword] = useState(() => {\n    return props ? props.user.password : ''\n  })\n\n  const [message, setMessage] = useState()\n\n  useEffect(() => {\n    console.log(password)\n    setFirstName(props.user.firstName)\n    setLastName(props.user.lastName)\n    setEmail(props.user.email)\n    setCompany(props.user.company)\n    // setId(props.user._id)\n  }, [props])\n\n  const clearAllFields = () => {\n    setMessage('')\n    setFirstName('')\n    setLastName('')\n    setEmail('')\n    setCompany('')\n    setPassword('')\n  }\n\n  const handleEdit = (e) => {\n    e.preventDefault()\n    update(props.user._id, email, firstName, lastName, company, password).then(\n      (response) => {\n        if (response.message) {\n          setMessage(response.message)\n        } else {\n          setPassword('')\n          // we now put the user in the state of App.js\n          props.setUser(response)\n        }\n      }\n    )\n  }\n\n  const style = {\n    input: 'tw-text-blue-600 tw-border tw-border-blue-600 tw-p-1',\n    label: 'tw-text-blue-600 tw-text-xs tw-text-left tw-leading-loose',\n  }\n\n  return (\n    <>\n      <div id='editProfile' className='tw-w-full md:tw-w-4/12 tw-px-5'>\n        <h1 className='tw-text-blue-600 tw-text-left'>Edit your profile</h1>\n        <form className='tw-flex tw-flex-col' onSubmit={handleEdit}>\n          <label className={style.label} htmlFor='firstName'>\n            First Name\n          </label>\n          <input\n            className={style.input}\n            type='text'\n            name='firstName'\n            id='firstName'\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n            required\n          />\n          <label className={style.label} htmlFor='firstName'>\n            Last Name\n          </label>\n          <input\n            className={style.input}\n            type='text'\n            name='lastName'\n            id='lastName'\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n            required\n          />\n          <label className={style.label} htmlFor='email'>\n            Email\n          </label>\n          <input\n            className={style.input}\n            type='text'\n            name='email'\n            id='email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <label className={style.label} htmlFor='company'>\n            Company\n          </label>\n          <input\n            className={style.input}\n            type='text'\n            name='company'\n            id='company'\n            value={company}\n            onChange={(e) => setCompany(e.target.value)}\n          />\n          <label className={style.label} htmlFor='firstName'>\n            Password\n          </label>\n          <input\n            className={style.input}\n            type='password'\n            id='password'\n            name='password'\n            placeholder=''\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <button\n            className='tw-bg-yellow-500 tw-text-blue-600 tw-py-5 tw-mt-5 md:tw-w-1/2'\n            type='submit'\n          >\n            Save Edit\n          </button>\n          {message && <h3>{message}</h3>}\n        </form>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { logout } from '../services/auth'\n\nexport default function Logout(props) {\n  const handleLogout = () => {\n    logout().then(() => {\n      props.setUser(null)\n    })\n  }\n\n  if (!props.user) return <></>\n  return (\n    <div id='signup' className='tw-w-full md:tw-w-4/12 tw-px-5'>\n      <h1 className='tw-text-blue-600 tw-text-left'>\n        Hi, {props.user.firstName}!\n      </h1>\n      <div className='tw-flex tw-flex-col'>\n        <button\n          class='tw-bg-yellow-500 tw-text-blue-600 tw-py-5 tw-mt-5 md:tw-w-1/2'\n          onClick={() => handleLogout()}\n        >\n          Logout\n        </button>\n\n        {/* {message && <h3>{message}</h3>} */}\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { login } from '../services/auth'\n\nexport default function Login(props) {\n  //   const [firstName, setFirstName] = useState('')\n  //   const [lastName, setLastName] = useState('')\n  //   const [email, setEmail] = useState('')\n  //   const [company, setCompany] = useState('')\n  //   const [password, setPassword] = useState('')\n  const [message, setMessage] = useState()\n\n  // log-in states\n  const [logEmail, setLogEmail] = useState('')\n  const [logPassword, setLogPassword] = useState('')\n\n  const clearAllFields = () => {\n    setMessage('')\n    // setFirstName('')\n    // setLastName('')\n    // setEmail('')\n    // setCompany('')\n    // setPassword('')\n    setLogEmail('')\n    setLogPassword('')\n  }\n\n  //   const handleSignup = (e) => {\n  //     e.preventDefault()\n  //     signup(email, firstName, lastName, company, password).then((response) => {\n  //       if (response.message) {\n  //         console.log(response)\n  //         setMessage(response.message)\n  //       } else {\n  //         clearAllFields()\n  //         // we now put the user in the state of App.js\n  //         props.setUser(response)\n\n  //         // props.history.push('/xxx')\n  //       }\n  //     })\n  //   }\n\n  const handleLogin = (e) => {\n    e.preventDefault()\n    // console.log(email)\n    login(logEmail, logPassword).then((response) => {\n      if (response.message) {\n        console.log(response)\n        setMessage(response.message)\n      } else {\n        clearAllFields()\n        // we now put the user in the state of App.js\n        props.setUser(response)\n        // props.history.push('/')\n      }\n    })\n  }\n\n  const style = {\n    input: 'tw-text-blue-600 tw-border tw-border-blue-600 tw-p-1',\n    label: 'tw-text-blue-600 tw-text-xs tw-text-left tw-leading-loose',\n  }\n\n  if (props.user) return <></>\n  return (\n    <div>\n      <div id='login' className='tw-w-full md:tw-w-4/12 tw-px-5'>\n        <h1 className='tw-text-blue-600 tw-text-left'>Login</h1>\n        <form className='tw-flex tw-flex-col' onSubmit={handleLogin}>\n          <label className={style.label} htmlFor='email'>\n            Email\n          </label>\n          <input\n            className={style.input}\n            type='text'\n            name='email'\n            id='email'\n            value={logEmail}\n            onChange={(e) => setLogEmail(e.target.value)}\n            required\n          />\n          <label className={style.label} htmlFor='firstName'>\n            Password\n          </label>\n          <input\n            className={style.input}\n            type='password'\n            id='password'\n            name='password'\n            placeholder=''\n            value={logPassword}\n            onChange={(e) => setLogPassword(e.target.value)}\n            required\n          />\n          <button\n            className='tw-bg-yellow-500 tw-text-blue-600 tw-py-5 tw-mt-5 md:tw-w-1/2'\n            type='submit'\n          >\n            Login\n          </button>\n\n          {message && <h3>{message}</h3>}\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Or() {\n  return (\n    <div\n      id='or'\n      className='tw-italic tw-text-4xl tw-py-10 tw-w-full md:tw-w-4/12 tw-px-5 tw-text-blue-600 tw-text-left'\n    >\n      Or\n    </div>\n  )\n}\n","// company_name: String,\n// url_linkedin: String,\n// number_employees: Number,\n// diversity_total: Number,\n// growth_score: Number,\n// opportunity_score: Number,\n// owner: {\n//   type: Schema.Types.ObjectId,\n//   ref: 'User',\n// },\n\nconst axios = require('axios')\n\n// /api/usercompanies POST\t(empty)\tCreates one userCompany\nconst createUserCompany = (\n  //   company_name,\n  url_linkedin\n  //   diversity_total,\n  //   growth_score,\n  //   opportunity_score\n) => {\n  return axios\n    .post(`/api/usercompanies`, {\n      //   company_name,\n      url_linkedin,\n      //   diversity_total,\n      //   growth_score,\n      //   opportunity_score,\n    })\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\n// /api/usercompanies/ GET\t(empty)\tReturns all userCompanies\nconst getAllUserCompanies = () => {\n  return axios\n    .get('/api/usercompanies')\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\n// /api/usercompanies/user/:id GET\t(empty)\tReturns all userCompanies by Owner\nconst getUserCompaniesFromUser = (userId) => {\n  return axios\n    .get(`/api/usercompanies/user/${userId}`)\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\n// /api/usercompanies/:id\tGET\t(empty)\tReturns the specified userCompany\nconst getUserCompany = (userCompanyId) => {\n  return axios\n    .get(`/api/usercompanies/${userCompanyId}`)\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\n// /api/usercompany/:id\tPUT\tJSON\tEdits the specified userCompany\nconst updateUserCompany = (\n  userCompanyId,\n  //   company_name,\n  url_linkedin\n  //   diversity_total,\n  //   growth_score,\n  //   opportunity_score\n) => {\n  return axios\n    .put(`/api/usercompanies/${userCompanyId}`, {\n      //   company_name,\n      url_linkedin,\n      //   diversity_total,\n      //   growth_score,\n      //   opportunity_score,\n    })\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\n// /api/usercompany/:id\tDELETE\tJSON\tDelete specified userCompany\nconst deleteCompany = (id) => {\n  return axios\n    .delete(`/api/usercompany/${id}`)\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\nexport {\n  createUserCompany,\n  getAllUserCompanies,\n  getUserCompany,\n  getUserCompaniesFromUser,\n  updateUserCompany,\n  deleteCompany,\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n  getAllUserCompanies,\n  getUserCompaniesFromUser,\n  getUserCompany,\n  updateUserCompany,\n  createUserCompany,\n  deleteCompany,\n} from '../services/userCompanies'\n\n// userCompanyId,\n// company_name,\n// url_linkedin,\n// diversity_total,\n// growth_score,\n// opportunity_score\n\nexport default function RegisterUserCompany(props) {\n  //   const [userCompanyId, setUserCompanyId] = useState()\n  //   const [companyName, setCompanyName] = useState()\n  const [urlLinkedin, setUrlLinkedin] = useState()\n  //   const [diversityScore, setDiversityScore] = useState()\n  //   const [growthScore, setGrowthScore] = useState()\n  //   const [opportunityScore, setOpportunityScore] = useState()\n  const [message, setMessage] = useState()\n\n  //   const clearAllFields = () => {\n  //     setCompanyName('')\n  //     setUrlLinkedin('')\n  //     setDiversityScore('')\n  //     setGrowthScore('')\n  //     setOpportunityScore('')\n  //     setMessage('')\n  //   }\n\n  // userCompanyId,\n  // company_name,\n  // url_linkedin,\n  // diversity_total,\n  // growth_score,\n  // opportunity_score\n\n  const handleRegister = (e) => {\n    e.preventDefault()\n    createUserCompany(urlLinkedin).then((response) => {\n      if (response.error) {\n        setMessage(response.error)\n        setUrlLinkedin('')\n      } else {\n        console.log(response)\n        props.setUserCompany(response)\n        setMessage('We calculated your Scores!')\n        setUrlLinkedin('')\n        // const {\n        //   _id,\n        //   company_name,\n        //   url_linkedin,\n        //   diversity_total,\n        //   growth_score,\n        //   opportunity_score,\n        // } = response.data\n        // setUserCompanyId(_id)\n        // setCompanyName(company_name)\n        // setUrlLinkedin(url_linkedin)\n        // setDiversityScore(diversity_total)\n        // setGrowthScore(growth_score)\n        // setOpportunityScore(opportunity_score)\n      }\n    })\n  }\n\n  const style = {\n    input: 'tw-text-blue-600 tw-border tw-border-blue-600 tw-p-1',\n    label: 'tw-text-blue-600 tw-text-xs tw-text-left tw-leading-loose',\n  }\n\n  //   company_name,\n  //   url_linkedin,\n  //   diversity_total,\n  //   growth_score,\n  //   opportunity_score,\n\n  if (props.user) return <></>\n  return (\n    <div>\n      <div\n        id='userCompanyRegistration'\n        className='tw-w-full md:tw-w-4/12 tw-px-5'\n      >\n        <h1 className='tw-text-blue-600 tw-text-left'>Register</h1>\n        <h3>register and compare your company</h3>\n        <form className='tw-flex tw-flex-col' onSubmit={handleRegister}>\n          <label className={style.label} htmlFor='company_name'>\n            LinkedIn Url\n          </label>\n          <input\n            className={style.input}\n            type='text'\n            name='url_linkedin'\n            id='url_linkedin'\n            value={urlLinkedin}\n            onChange={(e) => setUrlLinkedin(e.target.value)}\n            placeholder='https://www.linkedin.com/company/name/'\n            required\n          />\n          <button\n            className='tw-bg-yellow-500 tw-text-blue-600 tw-py-5 tw-mt-5 md:tw-w-1/2'\n            type='submit'\n          >\n            Submit & Compare\n          </button>\n          {message && <h3>{message}</h3>}\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Chart from './Chart'\nimport CompanyTable from './CompanyTable'\n\nexport default function UserCompany(props) {\n  return (\n    <div>\n      <h1>User Company</h1>\n      <Chart company={props.userCompany} />\n      <CompanyTable company={props.userCompany} />\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport Styleguide from './components/Styleguide'\nimport CompaniesList from './components/CompaniesList'\nimport Signup from './components/Signup'\nimport CompanyDetails from './components/CompanyDetails'\nimport EditProfile from './components/EditProfile'\nimport Logout from './components/Logout'\nimport Login from './components/Login'\nimport Or from './components/Or'\nimport RegisterUserCompany from './components/RegisterUserCompany'\nimport UserCompany from './components/UserCompany'\nimport { getUserCompaniesFromUser } from './services/userCompanies'\n\nconst axios = require('axios')\n\nfunction App(props) {\n  const [companies, setCompanies] = useState([])\n  const [user, setUser] = useState(props.user)\n  const [userCompany, setUserCompany] = useState()\n\n  useEffect(() => {\n    axios\n      .get('/api/companies')\n      .then((response) => {\n        setCompanies(response.data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [])\n\n  useEffect(() => {\n    setUser(props.user)\n  }, [props.user])\n\n  useEffect(() => {\n    if (user) {\n      getUserCompaniesFromUser(user._id).then((userCompaniesFromDB) => {\n        // console.log(userCompaniesFromDB[0])\n        setUserCompany(userCompaniesFromDB[0])\n      })\n    } else {\n      // setUserCompany(null)\n    }\n  }, [user])\n\n  console.log(companies)\n\n  if (!companies) return <h1>Loading...</h1>\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path='/'>\n          <Logout user={user} setUser={setUser} />\n          <Login user={user} setUser={setUser} />\n          {!user && <Or />}\n          <Signup user={user} setUser={setUser} />\n\n          {/* <ProtectedRoute\n          path='/account/edit'\n          user={user}\n          setUser={setUser}\n          component={EditProfile}\n          redirectPath='/'\n        /> */}\n          {user && <EditProfile user={user} setUser={setUser} />}\n          {user && <RegisterUserCompany setUserCompany={setUserCompany} />}\n          {userCompany && <UserCompany userCompany={userCompany} />}\n\n          {/* <CompaniesList companies={companies} /> */}\n        </Route>\n        {/* is it possible to do id param with new syntax? */}\n        {/* <Route exact path='/companies/:id' component={CompanyDetails} /> */}\n        <Route exact path='/styleguide'>\n          <Styleguide />\n        </Route>\n        <Route exact path='/companies/:id' component={CompanyDetails} />\n      </Switch>\n    </div>\n  )\n  // }\n}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\n\naxios.get('/api/auth/loggedin').then((response) => {\n  const user = response.data\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={user} />\n    </BrowserRouter>,\n    document.getElementById('root')\n  )\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}