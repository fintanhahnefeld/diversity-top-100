{"ast":null,"code":"// company_name: String,\n// url_linkedin: String,\n// number_employees: Number,\n// diversity_total: Number,\n// growth_score: Number,\n// opportunity_score: Number,\n// owner: {\n//   type: Schema.Types.ObjectId,\n//   ref: 'User',\n// },\nconst axios = require('axios'); // /api/usercompanies POST\t(empty)\tCreates one userCompany\n\n\nconst createUserCompany = ( //   company_name,\nurl_linkedin //   diversity_total,\n//   growth_score,\n//   opportunity_score\n) => {\n  return axios.post(`/api/usercompanies`, {\n    //   company_name,\n    url_linkedin //   diversity_total,\n    //   growth_score,\n    //   opportunity_score,\n\n  }).then(response => response.data).catch(err => err.response.data);\n}; // /api/usercompanies/ GET\t(empty)\tReturns all userCompanies\n\n\nconst getAllUserCompanies = () => {\n  return axios.get('/api/usercompanies').then(response => response.data).catch(err => err.response.data);\n}; // /api/usercompanies/user/:id GET\t(empty)\tReturns all userCompanies by Owner\n\n\nconst getUserCompaniesFromUser = userId => {\n  return axios.get(`/api/usercompanies/user/${userId}`).then(response => response.data).catch(err => err.response.data);\n}; // /api/usercompanies/:id\tGET\t(empty)\tReturns the specified userCompany\n\n\nconst getUserCompany = userCompanyId => {\n  return axios.get(`/api/usercompanies/${userCompanyId}`).then(response => response.data).catch(err => err.response.data);\n}; // /api/usercompany/:id\tPUT\tJSON\tEdits the specified userCompany\n\n\nconst updateUserCompany = (userCompanyId, //   company_name,\nurl_linkedin //   diversity_total,\n//   growth_score,\n//   opportunity_score\n) => {\n  return axios.put(`/api/usercompanies/${userCompanyId}`, {\n    //   company_name,\n    url_linkedin //   diversity_total,\n    //   growth_score,\n    //   opportunity_score,\n\n  }).then(response => response.data).catch(err => err.response.data);\n}; // /api/usercompany/:id\tDELETE\tJSON\tDelete specified userCompany\n\n\nconst deleteCompany = id => {\n  return axios.delete(`/api/usercompany/${id}`).then(response => response.data).catch(err => err.response.data);\n};\n\nexport { createUserCompany, getAllUserCompanies, getUserCompany, getUserCompaniesFromUser, updateUserCompany, deleteCompany };","map":{"version":3,"sources":["/Users/rimbo/Desktop/ironhack/project3/diversity/diversity/client/src/services/userCompanies.js"],"names":["axios","require","createUserCompany","url_linkedin","post","then","response","data","catch","err","getAllUserCompanies","get","getUserCompaniesFromUser","userId","getUserCompany","userCompanyId","updateUserCompany","put","deleteCompany","id","delete"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;;;AACA,MAAMC,iBAAiB,GAAG,EACxB;AACAC,YAFwB,CAGxB;AACA;AACA;AALwB,KAMrB;AACH,SAAOH,KAAK,CACTI,IADI,CACE,oBADF,EACuB;AAC1B;AACAD,IAAAA,YAF0B,CAG1B;AACA;AACA;;AAL0B,GADvB,EAQJE,IARI,CAQEC,QAAD,IAAcA,QAAQ,CAACC,IARxB,EASJC,KATI,CASGC,GAAD,IAASA,GAAG,CAACH,QAAJ,CAAaC,IATxB,CAAP;AAUD,CAjBD,C,CAmBA;;;AACA,MAAMG,mBAAmB,GAAG,MAAM;AAChC,SAAOV,KAAK,CACTW,GADI,CACA,oBADA,EAEJN,IAFI,CAEEC,QAAD,IAAcA,QAAQ,CAACC,IAFxB,EAGJC,KAHI,CAGGC,GAAD,IAASA,GAAG,CAACH,QAAJ,CAAaC,IAHxB,CAAP;AAID,CALD,C,CAOA;;;AACA,MAAMK,wBAAwB,GAAIC,MAAD,IAAY;AAC3C,SAAOb,KAAK,CACTW,GADI,CACC,2BAA0BE,MAAO,EADlC,EAEJR,IAFI,CAEEC,QAAD,IAAcA,QAAQ,CAACC,IAFxB,EAGJC,KAHI,CAGGC,GAAD,IAASA,GAAG,CAACH,QAAJ,CAAaC,IAHxB,CAAP;AAID,CALD,C,CAOA;;;AACA,MAAMO,cAAc,GAAIC,aAAD,IAAmB;AACxC,SAAOf,KAAK,CACTW,GADI,CACC,sBAAqBI,aAAc,EADpC,EAEJV,IAFI,CAEEC,QAAD,IAAcA,QAAQ,CAACC,IAFxB,EAGJC,KAHI,CAGGC,GAAD,IAASA,GAAG,CAACH,QAAJ,CAAaC,IAHxB,CAAP;AAID,CALD,C,CAOA;;;AACA,MAAMS,iBAAiB,GAAG,CACxBD,aADwB,EAExB;AACAZ,YAHwB,CAIxB;AACA;AACA;AANwB,KAOrB;AACH,SAAOH,KAAK,CACTiB,GADI,CACC,sBAAqBF,aAAc,EADpC,EACuC;AAC1C;AACAZ,IAAAA,YAF0C,CAG1C;AACA;AACA;;AAL0C,GADvC,EAQJE,IARI,CAQEC,QAAD,IAAcA,QAAQ,CAACC,IARxB,EASJC,KATI,CASGC,GAAD,IAASA,GAAG,CAACH,QAAJ,CAAaC,IATxB,CAAP;AAUD,CAlBD,C,CAoBA;;;AACA,MAAMW,aAAa,GAAIC,EAAD,IAAQ;AAC5B,SAAOnB,KAAK,CACToB,MADI,CACI,oBAAmBD,EAAG,EAD1B,EAEJd,IAFI,CAEEC,QAAD,IAAcA,QAAQ,CAACC,IAFxB,EAGJC,KAHI,CAGGC,GAAD,IAASA,GAAG,CAACH,QAAJ,CAAaC,IAHxB,CAAP;AAID,CALD;;AAOA,SACEL,iBADF,EAEEQ,mBAFF,EAGEI,cAHF,EAIEF,wBAJF,EAKEI,iBALF,EAMEE,aANF","sourcesContent":["// company_name: String,\n// url_linkedin: String,\n// number_employees: Number,\n// diversity_total: Number,\n// growth_score: Number,\n// opportunity_score: Number,\n// owner: {\n//   type: Schema.Types.ObjectId,\n//   ref: 'User',\n// },\n\nconst axios = require('axios')\n\n// /api/usercompanies POST\t(empty)\tCreates one userCompany\nconst createUserCompany = (\n  //   company_name,\n  url_linkedin\n  //   diversity_total,\n  //   growth_score,\n  //   opportunity_score\n) => {\n  return axios\n    .post(`/api/usercompanies`, {\n      //   company_name,\n      url_linkedin,\n      //   diversity_total,\n      //   growth_score,\n      //   opportunity_score,\n    })\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\n// /api/usercompanies/ GET\t(empty)\tReturns all userCompanies\nconst getAllUserCompanies = () => {\n  return axios\n    .get('/api/usercompanies')\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\n// /api/usercompanies/user/:id GET\t(empty)\tReturns all userCompanies by Owner\nconst getUserCompaniesFromUser = (userId) => {\n  return axios\n    .get(`/api/usercompanies/user/${userId}`)\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\n// /api/usercompanies/:id\tGET\t(empty)\tReturns the specified userCompany\nconst getUserCompany = (userCompanyId) => {\n  return axios\n    .get(`/api/usercompanies/${userCompanyId}`)\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\n// /api/usercompany/:id\tPUT\tJSON\tEdits the specified userCompany\nconst updateUserCompany = (\n  userCompanyId,\n  //   company_name,\n  url_linkedin\n  //   diversity_total,\n  //   growth_score,\n  //   opportunity_score\n) => {\n  return axios\n    .put(`/api/usercompanies/${userCompanyId}`, {\n      //   company_name,\n      url_linkedin,\n      //   diversity_total,\n      //   growth_score,\n      //   opportunity_score,\n    })\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\n// /api/usercompany/:id\tDELETE\tJSON\tDelete specified userCompany\nconst deleteCompany = (id) => {\n  return axios\n    .delete(`/api/usercompany/${id}`)\n    .then((response) => response.data)\n    .catch((err) => err.response.data)\n}\n\nexport {\n  createUserCompany,\n  getAllUserCompanies,\n  getUserCompany,\n  getUserCompaniesFromUser,\n  updateUserCompany,\n  deleteCompany,\n}\n"]},"metadata":{},"sourceType":"module"}