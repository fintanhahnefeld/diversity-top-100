{"ast":null,"code":"import _classCallCheck from\"/Users/rimbo/Desktop/ironhack/project3/diversity/diversity/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rimbo/Desktop/ironhack/project3/diversity/diversity/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/rimbo/Desktop/ironhack/project3/diversity/diversity/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/rimbo/Desktop/ironhack/project3/diversity/diversity/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Doughnut}from'react-chartjs-2';import{jsx as _jsx}from\"react/jsx-runtime\";var Chart=/*#__PURE__*/function(_Component){_inherits(Chart,_Component);var _super=_createSuper(Chart);function Chart(props){var _this;_classCallCheck(this,Chart);_this=_super.call(this,props);_this.state={chartData:{labels:[\"Diversity\",\"Opportunity\",\"Growth\"],datasets:[{data:[_this.props.company.diversity_total,_this.props.company.growth_score,_this.props.company.opportunity_score],backgroundColor:[\"#E0296C\",\"#3C7695\",\"#954E8B\"],hoverBackgroundColor:[\"#EC6A8E\",\"#56B39E\",\"#F7A559\"],borderWidth:2}]}};return _this;}_createClass(Chart,[{key:\"render\",value:function render(){//  console.log(this.state.props.company)\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"chart\",style:{width:\"100%\",height:\"100%\"},children:/*#__PURE__*/_jsx(Doughnut,{data:this.state.chartData,width:100,eight:50,options:{responsive:true,maintainAspectRatio:false,rotation:86*Math.PI,circumference:57*Math.PI,legend:{display:false,position:'right'}}})});}}]);return Chart;}(Component);////////////////////////////////\n// import React from 'react'\n// import { Pie } from 'react-chartjs-2'\n// //defaults.global.tooltips.enabled = false\n// //defaults.global.legend.position = 'bottom'\n// const Chart = () => {\n//   return (\n//     <div>\n//       <Pie\n//         data={{\n//           labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n//           datasets: [\n//             {\n//               label: '# of votes',\n//               data: [12, 19, 3, 5, 2, 3],\n//               backgroundColor: [\n//                 'rgba(255, 99, 132, 0.2)',\n//                 'rgba(54, 162, 235, 0.2)',\n//                 'rgba(255, 206, 86, 0.2)',\n//                 'rgba(75, 192, 192, 0.2)',\n//                 'rgba(153, 102, 255, 0.2)',\n//                 'rgba(255, 159, 64, 0.2)',\n//               ],\n//               borderColor: [\n//                 'rgba(255, 99, 132, 1)',\n//                 'rgba(54, 162, 235, 1)',\n//                 'rgba(255, 206, 86, 1)',\n//                 'rgba(75, 192, 192, 1)',\n//                 'rgba(153, 102, 255, 1)',\n//                 'rgba(255, 159, 64, 1)',\n//               ],\n//               borderWidth: 1,\n//             },\n//             // {\n//             //   label: 'Quantity',\n//             //   data: [47, 52, 67, 58, 9, 50],\n//             //   backgroundColor: 'orange',\n//             //   borderColor: 'red',\n//             // },\n//           ],\n//         }}\n//         height={400}\n//         width={600}\n//         options={{\n//           maintainAspectRatio: false,\n//           scales: {\n//             yAxes: [\n//               {\n//                 ticks: {\n//                   beginAtZero: true,\n//                 },\n//               },\n//             ],\n//           },\n//           legend: {\n//             labels: {\n//               fontSize: 25,\n//             },\n//           },\n//         }}\n//       />\n//     </div>\n//   )\n// }\n// export default Chart\n/////////////////////////////////////////////////Example Ahmed////////////////////////\n// import React, { Component } from 'react';\n// import Chart from \"chart.js\";\n// export default class PieChart extends Component {\n//   chartRef = React.createRef();\n//   state = {\n//     myChartRef: undefined,\n//   }\n//   componentDidMount() {\n//     this.setState({\n//       myChartRef: this.chartRef.current.getContext(\"2d\")\n//     })\n//   }\n//   render() {\n//     if(this.state.myChartRef && this.props.symbolsPrice && this.props.portfolio.length !== 0) \n//     {\n//       const labels = Object.keys(this.props.symbolsPrice);  \n//       const valueArray = this.props.portfolio.map(element => {\n//         return ((element.count) * this.props.symbolsPrice[element.ticker])\n//       })\n//       const sum = valueArray.reduce((a, b) => a + b, 0);\n//       const data = valueArray.map(element => {\n//         return ((element / sum)*100).toFixed(2);\n//       })\n//       let colorsArray = this.props.portfolio.map(element => {\n//         let r = Math.floor(Math.random() * 200);\n//         let g = Math.floor(Math.random() * 200);\n//         let b = Math.floor(Math.random() * 200);\n//         return('rgb(' + r + ', ' + g + ', ' + b + ')')\n//       })\n//       this.state.myChart = new Chart(this.state.myChartRef, {\n//         type: \"doughnut\",\n//         data: {\n//             datasets: [\n//                 {\n//                   data: data,\n//                   backgroundColor: colorsArray, \n//                 }\n//             ],\n//             labels: labels\n//         },\n//         options: {\n//           responsive: true,\n//           maintainAspectRatio: true,\n//           legend: {\n//             labels: {\n//               fontColor: \"white\",\n//               fontSize: 18\n//             }\n//           }\n//         }\n//       });\n//     }\n//     return (\n//       <div style={{width: \"45vw\", height: \"auto\"}} className=\"ml-3 mr-4 border p-3 border-white shadow p-3 mb-5 bg-body rounded\">\n//         <h4 className='mb-3'>Portfolio Distribution %</h4>\n//         <div>\n//             <canvas style={{width: \"40vw\", height: \"23vh\"}} id=\"myChart\" ref={this.chartRef}/>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\nexport{Chart as default};","map":{"version":3,"sources":["/Users/rimbo/Desktop/ironhack/project3/diversity/diversity/client/src/components/Chart.js"],"names":["React","Component","Doughnut","Chart","props","state","chartData","labels","datasets","data","company","diversity_total","growth_score","opportunity_score","backgroundColor","hoverBackgroundColor","borderWidth","width","height","responsive","maintainAspectRatio","rotation","Math","PI","circumference","legend","display","position"],"mappings":"gkBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,QAAT,KAAyB,iBAAzB,C,8CAIqBC,CAAAA,K,8FAEnB,eAAYC,KAAZ,CAAkB,uCAChB,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACXC,SAAS,CAAC,CACRC,MAAM,CAAE,CACN,WADM,CAEN,aAFM,CAGN,QAHM,CADA,CAMVC,QAAQ,CAAE,CACN,CACKC,IAAI,CAAE,CAAC,MAAKL,KAAL,CAAWM,OAAX,CAAmBC,eAApB,CAAqC,MAAKP,KAAL,CAAWM,OAAX,CAAmBE,YAAxD,CAAsE,MAAKR,KAAL,CAAWM,OAAX,CAAmBG,iBAAzF,CADX,CAGIC,eAAe,CAAE,CACb,SADa,CAEb,SAFa,CAGb,SAHa,CAHrB,CAQIC,oBAAoB,CAAE,CAClB,SADkB,CAElB,SAFkB,CAGlB,SAHkB,CAR1B,CAaIC,WAAW,CAAE,CAbjB,CADM,CANA,CADC,CAAb,CAHgB,aA4BjB,C,wCAGD,iBAAS,CACP;AAEA,mBAEE,YAAK,SAAS,CAAC,OAAf,CAAuB,KAAK,CAAE,CAACC,KAAK,CAAC,MAAP,CAAcC,MAAM,CAAC,MAArB,CAA9B,uBAEI,KAAC,QAAD,EACE,IAAI,CAAE,KAAKb,KAAL,CAAWC,SADnB,CAEE,KAAK,CAAE,GAFT,CAGC,KAAK,CAAE,EAHR,CAOE,OAAO,CAAE,CAENa,UAAU,CAAE,IAFN,CAGLC,mBAAmB,CAAE,KAHhB,CAILC,QAAQ,CAAE,GAAKC,IAAI,CAACC,EAJf,CAKLC,aAAa,CAAE,GAAKF,IAAI,CAACC,EALpB,CAMJE,MAAM,CAAE,CACNC,OAAO,CAAE,KADH,CAENC,QAAQ,CAAE,OAFJ,CANJ,CAPX,EAFJ,EAFF,CA2BD,C,mBA/DgC1B,S,EAkEnxMqBE,K","sourcesContent":["import React, { Component } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\n\n\nexport default class Chart extends Component {\n\n  constructor(props){\n    super(props)\n    \n    this.state = {\n      chartData:{\n        labels: [\n          \"Diversity\",\n          \"Opportunity\",\n          \"Growth\"\n      ],\n      datasets: [\n          {\n               data: [this.props.company.diversity_total, this.props.company.growth_score, this.props.company.opportunity_score],\n            \n              backgroundColor: [\n                  \"#E0296C\",\n                  \"#3C7695\",\n                  \"#954E8B\"\n              ],\n              hoverBackgroundColor: [\n                  \"#EC6A8E\",\n                  \"#56B39E\",\n                  \"#F7A559\"\n              ],\n              borderWidth: 2\n          }]\n      }\n    }\n  }\n\n \n  render() {\n    //  console.log(this.state.props.company)\n    \n    return (\n     \n      <div className=\"chart\" style={{width:\"100%\",height:\"100%\"}}>\n\n          <Doughnut\n            data={this.state.chartData}\n            width={100}\n\t          eight={50}\n            \n            \n\n            options={{\n             \n               responsive: true,\n                maintainAspectRatio: false,\n                rotation: 86 * Math.PI,\n                circumference: 57 * Math.PI,\n                 legend: {\n                   display: false,\n                   position: 'right'\n                 }\n                }}   \n             \n          />\n        \n      </div>\n    )\n  }\n}\n\n////////////////////////////////\n\n// import React from 'react'\n// import { Pie } from 'react-chartjs-2'\n\n// //defaults.global.tooltips.enabled = false\n// //defaults.global.legend.position = 'bottom'\n\n// const Chart = () => {\n//   return (\n//     <div>\n//       <Pie\n//         data={{\n//           labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n//           datasets: [\n//             {\n//               label: '# of votes',\n//               data: [12, 19, 3, 5, 2, 3],\n//               backgroundColor: [\n//                 'rgba(255, 99, 132, 0.2)',\n//                 'rgba(54, 162, 235, 0.2)',\n//                 'rgba(255, 206, 86, 0.2)',\n//                 'rgba(75, 192, 192, 0.2)',\n//                 'rgba(153, 102, 255, 0.2)',\n//                 'rgba(255, 159, 64, 0.2)',\n//               ],\n//               borderColor: [\n//                 'rgba(255, 99, 132, 1)',\n//                 'rgba(54, 162, 235, 1)',\n//                 'rgba(255, 206, 86, 1)',\n//                 'rgba(75, 192, 192, 1)',\n//                 'rgba(153, 102, 255, 1)',\n//                 'rgba(255, 159, 64, 1)',\n//               ],\n//               borderWidth: 1,\n//             },\n//             // {\n//             //   label: 'Quantity',\n//             //   data: [47, 52, 67, 58, 9, 50],\n//             //   backgroundColor: 'orange',\n//             //   borderColor: 'red',\n//             // },\n//           ],\n//         }}\n//         height={400}\n//         width={600}\n//         options={{\n//           maintainAspectRatio: false,\n//           scales: {\n//             yAxes: [\n//               {\n//                 ticks: {\n//                   beginAtZero: true,\n//                 },\n//               },\n//             ],\n//           },\n//           legend: {\n//             labels: {\n//               fontSize: 25,\n//             },\n//           },\n//         }}\n//       />\n//     </div>\n//   )\n// }\n\n// export default Chart\n\n\n\n/////////////////////////////////////////////////Example Ahmed////////////////////////\n// import React, { Component } from 'react';\n// import Chart from \"chart.js\";\n// export default class PieChart extends Component {\n//   chartRef = React.createRef();\n//   state = {\n//     myChartRef: undefined,\n//   }\n//   componentDidMount() {\n//     this.setState({\n//       myChartRef: this.chartRef.current.getContext(\"2d\")\n//     })\n//   }\n//   render() {\n//     if(this.state.myChartRef && this.props.symbolsPrice && this.props.portfolio.length !== 0) \n//     {\n//       const labels = Object.keys(this.props.symbolsPrice);  \n//       const valueArray = this.props.portfolio.map(element => {\n//         return ((element.count) * this.props.symbolsPrice[element.ticker])\n//       })\n//       const sum = valueArray.reduce((a, b) => a + b, 0);\n//       const data = valueArray.map(element => {\n//         return ((element / sum)*100).toFixed(2);\n//       })\n//       let colorsArray = this.props.portfolio.map(element => {\n//         let r = Math.floor(Math.random() * 200);\n//         let g = Math.floor(Math.random() * 200);\n//         let b = Math.floor(Math.random() * 200);\n//         return('rgb(' + r + ', ' + g + ', ' + b + ')')\n//       })\n//       this.state.myChart = new Chart(this.state.myChartRef, {\n//         type: \"doughnut\",\n//         data: {\n//             datasets: [\n//                 {\n//                   data: data,\n//                   backgroundColor: colorsArray, \n//                 }\n//             ],\n//             labels: labels\n//         },\n//         options: {\n//           responsive: true,\n//           maintainAspectRatio: true,\n//           legend: {\n//             labels: {\n//               fontColor: \"white\",\n//               fontSize: 18\n//             }\n//           }\n//         }\n//       });\n//     }\n//     return (\n//       <div style={{width: \"45vw\", height: \"auto\"}} className=\"ml-3 mr-4 border p-3 border-white shadow p-3 mb-5 bg-body rounded\">\n//         <h4 className='mb-3'>Portfolio Distribution %</h4>\n//         <div>\n//             <canvas style={{width: \"40vw\", height: \"23vh\"}} id=\"myChart\" ref={this.chartRef}/>\n//         </div>\n//       </div>\n//     )\n//   }\n// }"]},"metadata":{},"sourceType":"module"}