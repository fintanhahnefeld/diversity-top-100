{"ast":null,"code":"var _jsxFileName = \"/Users/rimbo/Desktop/ironhack/project3/diversity/diversity/client/src/components/TransButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useMeasure from 'react-use-measure';\nimport { useSpring, animated } from 'react-spring'; // import styles from '../components/styles.module.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TransButton(props) {\n  _s();\n\n  const [open, toggle] = useState(false);\n  const [ref, {\n    width\n  }] = useMeasure();\n  const buttonProp = useSpring({\n    width: open ? width : 0\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.size,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        height: '100%',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        style: {\n          position: 'relative',\n          width: '100%',\n          height: '100%',\n          cursor: 'pointer',\n          backgroundColor: `${props.backgroundColor}`,\n          overflow: 'hidden'\n        },\n        onMouseMove: () => toggle(!open),\n        children: [/*#__PURE__*/_jsxDEV(animated.div, {\n          style: {\n            positon: 'absolute',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%',\n            background: `${props.fillColor}`,\n            ...buttonProp\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n          style: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            color: `${props.textColor}`\n          },\n          children: props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransButton, \"q1Y3cvzIl/HR6VG2/offu9yUUwA=\", false, function () {\n  return [useMeasure, useSpring];\n});\n\n_c = TransButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransButton\");","map":{"version":3,"sources":["/Users/rimbo/Desktop/ironhack/project3/diversity/diversity/client/src/components/TransButton.js"],"names":["React","useState","useMeasure","useSpring","animated","TransButton","props","open","toggle","ref","width","buttonProp","size","display","alignItems","height","justifyContent","position","cursor","backgroundColor","overflow","positon","top","left","background","fillColor","color","textColor","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC,C,CACA;;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM,CAACC,IAAD,EAAOC,MAAP,IAAiBP,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACQ,GAAD,EAAM;AAAEC,IAAAA;AAAF,GAAN,IAAmBR,UAAU,EAAnC;AACA,QAAMS,UAAU,GAAGR,SAAS,CAAC;AAAEO,IAAAA,KAAK,EAAEH,IAAI,GAAGG,KAAH,GAAW;AAAxB,GAAD,CAA5B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEJ,KAAK,CAACM,IAAtB;AAAA,2BACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,UAAU,EAAE,QAFP;AAGLC,QAAAA,MAAM,EAAE,MAHH;AAILC,QAAAA,cAAc,EAAE;AAJX,OADT;AAAA,6BAQE;AACE,QAAA,GAAG,EAAEP,GADP;AAEE,QAAA,KAAK,EAAE;AACLQ,UAAAA,QAAQ,EAAE,UADL;AAELP,UAAAA,KAAK,EAAE,MAFF;AAGLK,UAAAA,MAAM,EAAE,MAHH;AAILG,UAAAA,MAAM,EAAE,SAJH;AAKLC,UAAAA,eAAe,EAAG,GAAEb,KAAK,CAACa,eAAgB,EALrC;AAMLC,UAAAA,QAAQ,EAAE;AANL,SAFT;AAUE,QAAA,WAAW,EAAE,MAAMZ,MAAM,CAAC,CAACD,IAAF,CAV3B;AAAA,gCAYE,QAAC,QAAD,CAAU,GAAV;AACE,UAAA,KAAK,EAAE;AACLc,YAAAA,OAAO,EAAE,UADJ;AAELC,YAAAA,GAAG,EAAE,GAFA;AAGLC,YAAAA,IAAI,EAAE,GAHD;AAILb,YAAAA,KAAK,EAAE,MAJF;AAKLK,YAAAA,MAAM,EAAE,MALH;AAMLS,YAAAA,UAAU,EAAG,GAAElB,KAAK,CAACmB,SAAU,EAN1B;AAOL,eAAGd;AAPE;AADT;AAAA;AAAA;AAAA;AAAA,gBAZF,eAuBE,QAAC,QAAD,CAAU,GAAV;AACE,UAAA,KAAK,EAAE;AACLM,YAAAA,QAAQ,EAAE,UADL;AAELK,YAAAA,GAAG,EAAE,GAFA;AAGLC,YAAAA,IAAI,EAAE,GAHD;AAILb,YAAAA,KAAK,EAAE,MAJF;AAKLK,YAAAA,MAAM,EAAE,MALH;AAMLF,YAAAA,OAAO,EAAE,MANJ;AAOLC,YAAAA,UAAU,EAAE,QAPP;AAQLE,YAAAA,cAAc,EAAE,QARX;AASLU,YAAAA,KAAK,EAAG,GAAEpB,KAAK,CAACqB,SAAU;AATrB,WADT;AAAA,oBAcGrB,KAAK,CAACsB;AAdT;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD;;GA1DuBvB,W;UAEGH,U,EACNC,S;;;KAHGE,W","sourcesContent":["import React, { useState } from 'react'\nimport useMeasure from 'react-use-measure'\nimport { useSpring, animated } from 'react-spring'\n// import styles from '../components/styles.module.css'\n\nexport default function TransButton(props) {\n  const [open, toggle] = useState(false)\n  const [ref, { width }] = useMeasure()\n  const buttonProp = useSpring({ width: open ? width : 0 })\n\n  return (\n    <div className={props.size}>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        <div\n          ref={ref}\n          style={{\n            position: 'relative',\n            width: '100%',\n            height: '100%',\n            cursor: 'pointer',\n            backgroundColor: `${props.backgroundColor}`,\n            overflow: 'hidden',\n          }}\n          onMouseMove={() => toggle(!open)}\n        >\n          <animated.div\n            style={{\n              positon: 'absolute',\n              top: '0',\n              left: '0',\n              width: '100%',\n              height: '100%',\n              background: `${props.fillColor}`,\n              ...buttonProp,\n            }}\n          />\n          <animated.div\n            style={{\n              position: 'absolute',\n              top: '0',\n              left: '0',\n              width: '100%',\n              height: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              color: `${props.textColor}`,\n            }}\n          >\n            {/* {prop.width.to((x) => x.toFixed(0))} */}\n            {props.text}\n          </animated.div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}