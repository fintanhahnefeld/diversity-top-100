{"ast":null,"code":"var _jsxFileName = \"/Users/rimbo/Desktop/ironhack/project3/diversity/diversity/client/src/components/Chart.js\";\nimport React, { PureComponent } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Chart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {\n        labels: ['Diversity', 'Opportunity', 'Growth'],\n        datasets: [{\n          data: [this.props.company.diversity_total, this.props.company.growth_score, this.props.company.opportunity_score],\n          backgroundColor: ['#E0296C', '#3C7695', '#954E8B'],\n          hoverBackgroundColor: ['#EC6A8E', '#56B39E', '#F7A559'],\n          borderWidth: 2\n        }]\n      }\n    };\n  }\n\n  render() {\n    //  console.log(this.state.props.company)\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      rotation: 86 * Math.PI,\n      circumference: 57 * Math.PI,\n      legend: {\n        display: false,\n        position: 'right'\n      },\n      tooltips: {\n        backgroundColor: \"rgba(0,0,0,0.8)\",\n        bodyAlign: \"left\",\n        bodyFontColor: \"#fff\",\n        bodySpacing: 2,\n        borderColor: \"rgba(0,0,0,0)\",\n        borderWidth: 0,\n        //callbacks: {beforeTitle: ƒ, title: ƒ, afterTitle: ƒ, beforeBody: ƒ, beforeLabel: ƒ, …}\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        custom: null,\n        displayColors: false,\n        enabled: true,\n        footerAlign: \"left\",\n        footerFontColor: \"#fff\",\n        footerFontStyle: \"bold\",\n        footerMarginTop: 6,\n        footerSpacing: 2,\n        intersect: true,\n        mode: \"nearest\",\n        multiKeyBackground: \"#fff\",\n        position: \"average\",\n        titleAlign: \"left\",\n        titleFontColor: \"#fff\",\n        titleFontStyle: \"bold\",\n        titleMarginBottom: 6,\n        titleSpacing: 2,\n        xPadding: 6,\n        yPadding: 6\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: this.state.chartData,\n        width: 100,\n        eight: 50,\n        options: options // options={{\n        //   responsive: true,\n        //   maintainAspectRatio: false,\n        //   rotation: 86 * Math.PI,\n        //   circumference: 57 * Math.PI,\n        //   legend: {\n        //     display: false,\n        //     position: 'right',\n        //   },\n        //   tooltips: {\n        //         backgroundColor: \"rgba(0,0,0,0.8)\",\n        //         bodyAlign: \"left\",\n        //         bodyFontColor: \"#fff\",\n        //         bodySpacing: 2,\n        //         borderColor: \"rgba(0,0,0,0)\",\n        //         borderWidth: 0,\n        //         //callbacks: {beforeTitle: ƒ, title: ƒ, afterTitle: ƒ, beforeBody: ƒ, beforeLabel: ƒ, …}\n        //         caretPadding: 2,\n        //         caretSize: 5,\n        //         cornerRadius: 6,\n        //         custom: null,\n        //         displayColors: false,\n        //         enabled: true,\n        //         footerAlign: \"left\",\n        //         footerFontColor: \"#fff\",\n        //         footerFontStyle: \"bold\",\n        //         footerMarginTop: 6,\n        //         footerSpacing: 2,\n        //         intersect: true,\n        //         mode: \"nearest\",\n        //         multiKeyBackground: \"#fff\",\n        //         position: \"average\",\n        //         titleAlign: \"left\",\n        //         titleFontColor: \"#fff\",\n        //         titleFontStyle: \"bold\",\n        //         titleMarginBottom: 6,\n        //         titleSpacing: 2,\n        //         xPadding: 6,\n        //         yPadding: 6\n        //       }\n        // }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n} ////////////////////////////////\n// import React from 'react'\n// import { Pie } from 'react-chartjs-2'\n// //defaults.global.tooltips.enabled = false\n// //defaults.global.legend.position = 'bottom'\n// const Chart = () => {\n//   return (\n//     <div>\n//       <Pie\n//         data={{\n//           labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n//           datasets: [\n//             {\n//               label: '# of votes',\n//               data: [12, 19, 3, 5, 2, 3],\n//               backgroundColor: [\n//                 'rgba(255, 99, 132, 0.2)',\n//                 'rgba(54, 162, 235, 0.2)',\n//                 'rgba(255, 206, 86, 0.2)',\n//                 'rgba(75, 192, 192, 0.2)',\n//                 'rgba(153, 102, 255, 0.2)',\n//                 'rgba(255, 159, 64, 0.2)',\n//               ],\n//               borderColor: [\n//                 'rgba(255, 99, 132, 1)',\n//                 'rgba(54, 162, 235, 1)',\n//                 'rgba(255, 206, 86, 1)',\n//                 'rgba(75, 192, 192, 1)',\n//                 'rgba(153, 102, 255, 1)',\n//                 'rgba(255, 159, 64, 1)',\n//               ],\n//               borderWidth: 1,\n//             },\n//             // {\n//             //   label: 'Quantity',\n//             //   data: [47, 52, 67, 58, 9, 50],\n//             //   backgroundColor: 'orange',\n//             //   borderColor: 'red',\n//             // },\n//           ],\n//         }}\n//         height={400}\n//         width={600}\n//         options={{\n//           maintainAspectRatio: false,\n//           scales: {\n//             yAxes: [\n//               {\n//                 ticks: {\n//                   beginAtZero: true,\n//                 },\n//               },\n//             ],\n//           },\n//           legend: {\n//             labels: {\n//               fontSize: 25,\n//             },\n//           },\n//         }}\n//       />\n//     </div>\n//   )\n// }\n// export default Chart\n/////////////////////////////////////////////////Example Ahmed////////////////////////\n// import React, { Component } from 'react';\n// import Chart from \"chart.js\";\n// export default class PieChart extends Component {\n//   chartRef = React.createRef();\n//   state = {\n//     myChartRef: undefined,\n//   }\n//   componentDidMount() {\n//     this.setState({\n//       myChartRef: this.chartRef.current.getContext(\"2d\")\n//     })\n//   }\n//   render() {\n//     if(this.state.myChartRef && this.props.symbolsPrice && this.props.portfolio.length !== 0)\n//     {\n//       const labels = Object.keys(this.props.symbolsPrice);\n//       const valueArray = this.props.portfolio.map(element => {\n//         return ((element.count) * this.props.symbolsPrice[element.ticker])\n//       })\n//       const sum = valueArray.reduce((a, b) => a + b, 0);\n//       const data = valueArray.map(element => {\n//         return ((element / sum)*100).toFixed(2);\n//       })\n//       let colorsArray = this.props.portfolio.map(element => {\n//         let r = Math.floor(Math.random() * 200);\n//         let g = Math.floor(Math.random() * 200);\n//         let b = Math.floor(Math.random() * 200);\n//         return('rgb(' + r + ', ' + g + ', ' + b + ')')\n//       })\n//       this.state.myChart = new Chart(this.state.myChartRef, {\n//         type: \"doughnut\",\n//         data: {\n//             datasets: [\n//                 {\n//                   data: data,\n//                   backgroundColor: colorsArray,\n//                 }\n//             ],\n//             labels: labels\n//         },\n//         options: {\n//           responsive: true,\n//           maintainAspectRatio: true,\n//           legend: {\n//             labels: {\n//               fontColor: \"white\",\n//               fontSize: 18\n//             }\n//           }\n//         }\n//       });\n//     }\n//     return (\n//       <div style={{width: \"45vw\", height: \"auto\"}} className=\"ml-3 mr-4 border p-3 border-white shadow p-3 mb-5 bg-body rounded\">\n//         <h4 className='mb-3'>Portfolio Distribution %</h4>\n//         <div>\n//             <canvas style={{width: \"40vw\", height: \"23vh\"}} id=\"myChart\" ref={this.chartRef}/>\n//         </div>\n//       </div>\n//     )\n//   }\n// }","map":{"version":3,"sources":["/Users/rimbo/Desktop/ironhack/project3/diversity/diversity/client/src/components/Chart.js"],"names":["React","PureComponent","Doughnut","Chart","constructor","props","state","chartData","labels","datasets","data","company","diversity_total","growth_score","opportunity_score","backgroundColor","hoverBackgroundColor","borderWidth","render","options","responsive","maintainAspectRatio","rotation","Math","PI","circumference","legend","display","position","tooltips","bodyAlign","bodyFontColor","bodySpacing","borderColor","caretPadding","caretSize","cornerRadius","custom","displayColors","enabled","footerAlign","footerFontColor","footerFontStyle","footerMarginTop","footerSpacing","intersect","mode","multiKeyBackground","titleAlign","titleFontColor","titleFontStyle","titleMarginBottom","titleSpacing","xPadding","yPadding","width","height"],"mappings":"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":["import React, { PureComponent } from 'react'\nimport { Doughnut } from 'react-chartjs-2'\n\nexport default class Chart extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      chartData: {\n        labels: ['Diversity', 'Opportunity', 'Growth'],\n        datasets: [\n          {\n            data: [\n              this.props.company.diversity_total,\n              this.props.company.growth_score,\n              this.props.company.opportunity_score,\n            ],\n\n            backgroundColor: ['#E0296C', '#3C7695', '#954E8B'],\n            hoverBackgroundColor: ['#EC6A8E', '#56B39E', '#F7A559'],\n            borderWidth: 2,\n          },\n        ],\n      },\n    }\n  }\n\n  render() {\n    //  console.log(this.state.props.company)\n\n   const options={\n      responsive: true,\n      maintainAspectRatio: false,\n      rotation: 86 * Math.PI,\n      circumference: 57 * Math.PI,\n      legend: {\n        display: false,\n        position: 'right',\n      },\n      tooltips: {\n            backgroundColor: \"rgba(0,0,0,0.8)\",\n            bodyAlign: \"left\",\n            bodyFontColor: \"#fff\",\n            bodySpacing: 2,\n            borderColor: \"rgba(0,0,0,0)\",\n            borderWidth: 0,\n            //callbacks: {beforeTitle: ƒ, title: ƒ, afterTitle: ƒ, beforeBody: ƒ, beforeLabel: ƒ, …}\n            caretPadding: 2,\n            caretSize: 5,\n            cornerRadius: 6,\n            custom: null,\n            displayColors: false,\n            enabled: true,\n            footerAlign: \"left\",\n            footerFontColor: \"#fff\",\n            footerFontStyle: \"bold\",\n            footerMarginTop: 6,\n            footerSpacing: 2,\n            intersect: true,\n            mode: \"nearest\",\n            multiKeyBackground: \"#fff\",\n            position: \"average\",\n            titleAlign: \"left\",\n            titleFontColor: \"#fff\",\n            titleFontStyle: \"bold\",\n            titleMarginBottom: 6,\n            titleSpacing: 2,\n            xPadding: 6,\n            yPadding: 6\n          }\n    }\n\n    return (\n      <div className='chart' style={{ width: '100%', height: '100%' }}>\n        <Doughnut\n          data={this.state.chartData}\n          width={100}\n          eight={50}\n          options ={options}\n          // options={{\n          //   responsive: true,\n          //   maintainAspectRatio: false,\n          //   rotation: 86 * Math.PI,\n          //   circumference: 57 * Math.PI,\n          //   legend: {\n          //     display: false,\n          //     position: 'right',\n          //   },\n          //   tooltips: {\n          //         backgroundColor: \"rgba(0,0,0,0.8)\",\n          //         bodyAlign: \"left\",\n          //         bodyFontColor: \"#fff\",\n          //         bodySpacing: 2,\n          //         borderColor: \"rgba(0,0,0,0)\",\n          //         borderWidth: 0,\n          //         //callbacks: {beforeTitle: ƒ, title: ƒ, afterTitle: ƒ, beforeBody: ƒ, beforeLabel: ƒ, …}\n          //         caretPadding: 2,\n          //         caretSize: 5,\n          //         cornerRadius: 6,\n          //         custom: null,\n          //         displayColors: false,\n          //         enabled: true,\n          //         footerAlign: \"left\",\n          //         footerFontColor: \"#fff\",\n          //         footerFontStyle: \"bold\",\n          //         footerMarginTop: 6,\n          //         footerSpacing: 2,\n          //         intersect: true,\n          //         mode: \"nearest\",\n          //         multiKeyBackground: \"#fff\",\n          //         position: \"average\",\n          //         titleAlign: \"left\",\n          //         titleFontColor: \"#fff\",\n          //         titleFontStyle: \"bold\",\n          //         titleMarginBottom: 6,\n          //         titleSpacing: 2,\n          //         xPadding: 6,\n          //         yPadding: 6\n          //       }\n          // }}\n        />\n      </div>\n    )\n  }\n}\n\n////////////////////////////////\n\n// import React from 'react'\n// import { Pie } from 'react-chartjs-2'\n\n// //defaults.global.tooltips.enabled = false\n// //defaults.global.legend.position = 'bottom'\n\n// const Chart = () => {\n//   return (\n//     <div>\n//       <Pie\n//         data={{\n//           labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n//           datasets: [\n//             {\n//               label: '# of votes',\n//               data: [12, 19, 3, 5, 2, 3],\n//               backgroundColor: [\n//                 'rgba(255, 99, 132, 0.2)',\n//                 'rgba(54, 162, 235, 0.2)',\n//                 'rgba(255, 206, 86, 0.2)',\n//                 'rgba(75, 192, 192, 0.2)',\n//                 'rgba(153, 102, 255, 0.2)',\n//                 'rgba(255, 159, 64, 0.2)',\n//               ],\n//               borderColor: [\n//                 'rgba(255, 99, 132, 1)',\n//                 'rgba(54, 162, 235, 1)',\n//                 'rgba(255, 206, 86, 1)',\n//                 'rgba(75, 192, 192, 1)',\n//                 'rgba(153, 102, 255, 1)',\n//                 'rgba(255, 159, 64, 1)',\n//               ],\n//               borderWidth: 1,\n//             },\n//             // {\n//             //   label: 'Quantity',\n//             //   data: [47, 52, 67, 58, 9, 50],\n//             //   backgroundColor: 'orange',\n//             //   borderColor: 'red',\n//             // },\n//           ],\n//         }}\n//         height={400}\n//         width={600}\n//         options={{\n//           maintainAspectRatio: false,\n//           scales: {\n//             yAxes: [\n//               {\n//                 ticks: {\n//                   beginAtZero: true,\n//                 },\n//               },\n//             ],\n//           },\n//           legend: {\n//             labels: {\n//               fontSize: 25,\n//             },\n//           },\n//         }}\n//       />\n//     </div>\n//   )\n// }\n\n// export default Chart\n\n/////////////////////////////////////////////////Example Ahmed////////////////////////\n// import React, { Component } from 'react';\n// import Chart from \"chart.js\";\n// export default class PieChart extends Component {\n//   chartRef = React.createRef();\n//   state = {\n//     myChartRef: undefined,\n//   }\n//   componentDidMount() {\n//     this.setState({\n//       myChartRef: this.chartRef.current.getContext(\"2d\")\n//     })\n//   }\n//   render() {\n//     if(this.state.myChartRef && this.props.symbolsPrice && this.props.portfolio.length !== 0)\n//     {\n//       const labels = Object.keys(this.props.symbolsPrice);\n//       const valueArray = this.props.portfolio.map(element => {\n//         return ((element.count) * this.props.symbolsPrice[element.ticker])\n//       })\n//       const sum = valueArray.reduce((a, b) => a + b, 0);\n//       const data = valueArray.map(element => {\n//         return ((element / sum)*100).toFixed(2);\n//       })\n//       let colorsArray = this.props.portfolio.map(element => {\n//         let r = Math.floor(Math.random() * 200);\n//         let g = Math.floor(Math.random() * 200);\n//         let b = Math.floor(Math.random() * 200);\n//         return('rgb(' + r + ', ' + g + ', ' + b + ')')\n//       })\n//       this.state.myChart = new Chart(this.state.myChartRef, {\n//         type: \"doughnut\",\n//         data: {\n//             datasets: [\n//                 {\n//                   data: data,\n//                   backgroundColor: colorsArray,\n//                 }\n//             ],\n//             labels: labels\n//         },\n//         options: {\n//           responsive: true,\n//           maintainAspectRatio: true,\n//           legend: {\n//             labels: {\n//               fontColor: \"white\",\n//               fontSize: 18\n//             }\n//           }\n//         }\n//       });\n//     }\n//     return (\n//       <div style={{width: \"45vw\", height: \"auto\"}} className=\"ml-3 mr-4 border p-3 border-white shadow p-3 mb-5 bg-body rounded\">\n//         <h4 className='mb-3'>Portfolio Distribution %</h4>\n//         <div>\n//             <canvas style={{width: \"40vw\", height: \"23vh\"}} id=\"myChart\" ref={this.chartRef}/>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}