{"ast":null,"code":"import _objectSpread from\"/Users/rimbo/Desktop/ironhack/project3/diversity/diversity/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/rimbo/Desktop/ironhack/project3/diversity/diversity/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import useMeasure from'react-use-measure';import{useSpring,animated}from'react-spring';// import styles from '../components/styles.module.css'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function TransButton(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],toggle=_useState2[1];var _useMeasure=useMeasure(),_useMeasure2=_slicedToArray(_useMeasure,2),ref=_useMeasure2[0],width=_useMeasure2[1].width;var buttonProp=useSpring({width:open?width:0});return/*#__PURE__*/_jsx(\"div\",{className:props.size,children:/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',alignItems:'center',height:'100%',justifyContent:'center'},children:/*#__PURE__*/_jsxs(\"div\",{ref:ref,style:{position:'relative',width:'100%',height:'100%',cursor:'pointer',backgroundColor:\"\".concat(props.backgroundColor),overflow:'hidden'},onMouseMove:function onMouseMove(){return toggle(!open);},children:[/*#__PURE__*/_jsx(animated.div,{style:_objectSpread({positon:'absolute',top:'0',left:'0',width:'100%',height:'100%',background:\"\".concat(props.fillColor)},buttonProp)}),/*#__PURE__*/_jsx(animated.div,{style:{position:'absolute',top:'0',left:'0',width:'100%',height:'100%',display:'flex',alignItems:'center',justifyContent:'center',color:\"\".concat(props.textColor)},children:props.text})]})})});}","map":{"version":3,"sources":["/Users/rimbo/Desktop/ironhack/project3/diversity/diversity/client/src/components/TransButton.js"],"names":["React","useState","useMeasure","useSpring","animated","TransButton","props","open","toggle","ref","width","buttonProp","size","display","alignItems","height","justifyContent","position","cursor","backgroundColor","overflow","positon","top","left","background","fillColor","color","textColor","text"],"mappings":"uSAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,cAApC,CACA;wFAEA,cAAe,SAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CACzC,cAAuBL,QAAQ,CAAC,KAAD,CAA/B,wCAAOM,IAAP,eAAaC,MAAb,eACA,gBAAyBN,UAAU,EAAnC,4CAAOO,GAAP,iBAAcC,KAAd,iBAAcA,KAAd,CACA,GAAMC,CAAAA,UAAU,CAAGR,SAAS,CAAC,CAAEO,KAAK,CAAEH,IAAI,CAAGG,KAAH,CAAW,CAAxB,CAAD,CAA5B,CAEA,mBACE,YAAK,SAAS,CAAEJ,KAAK,CAACM,IAAtB,uBACE,YACE,KAAK,CAAE,CACLC,OAAO,CAAE,MADJ,CAELC,UAAU,CAAE,QAFP,CAGLC,MAAM,CAAE,MAHH,CAILC,cAAc,CAAE,QAJX,CADT,uBAQE,aACE,GAAG,CAAEP,GADP,CAEE,KAAK,CAAE,CACLQ,QAAQ,CAAE,UADL,CAELP,KAAK,CAAE,MAFF,CAGLK,MAAM,CAAE,MAHH,CAILG,MAAM,CAAE,SAJH,CAKLC,eAAe,WAAKb,KAAK,CAACa,eAAX,CALV,CAMLC,QAAQ,CAAE,QANL,CAFT,CAUE,WAAW,CAAE,6BAAMZ,CAAAA,MAAM,CAAC,CAACD,IAAF,CAAZ,EAVf,wBAYE,KAAC,QAAD,CAAU,GAAV,EACE,KAAK,gBACHc,OAAO,CAAE,UADN,CAEHC,GAAG,CAAE,GAFF,CAGHC,IAAI,CAAE,GAHH,CAIHb,KAAK,CAAE,MAJJ,CAKHK,MAAM,CAAE,MALL,CAMHS,UAAU,WAAKlB,KAAK,CAACmB,SAAX,CANP,EAOAd,UAPA,CADP,EAZF,cAuBE,KAAC,QAAD,CAAU,GAAV,EACE,KAAK,CAAE,CACLM,QAAQ,CAAE,UADL,CAELK,GAAG,CAAE,GAFA,CAGLC,IAAI,CAAE,GAHD,CAILb,KAAK,CAAE,MAJF,CAKLK,MAAM,CAAE,MALH,CAMLF,OAAO,CAAE,MANJ,CAOLC,UAAU,CAAE,QAPP,CAQLE,cAAc,CAAE,QARX,CASLU,KAAK,WAAKpB,KAAK,CAACqB,SAAX,CATA,CADT,UAcGrB,KAAK,CAACsB,IAdT,EAvBF,GARF,EADF,EADF,CAqDD","sourcesContent":["import React, { useState } from 'react'\nimport useMeasure from 'react-use-measure'\nimport { useSpring, animated } from 'react-spring'\n// import styles from '../components/styles.module.css'\n\nexport default function TransButton(props) {\n  const [open, toggle] = useState(false)\n  const [ref, { width }] = useMeasure()\n  const buttonProp = useSpring({ width: open ? width : 0 })\n\n  return (\n    <div className={props.size}>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        <div\n          ref={ref}\n          style={{\n            position: 'relative',\n            width: '100%',\n            height: '100%',\n            cursor: 'pointer',\n            backgroundColor: `${props.backgroundColor}`,\n            overflow: 'hidden',\n          }}\n          onMouseMove={() => toggle(!open)}\n        >\n          <animated.div\n            style={{\n              positon: 'absolute',\n              top: '0',\n              left: '0',\n              width: '100%',\n              height: '100%',\n              background: `${props.fillColor}`,\n              ...buttonProp,\n            }}\n          />\n          <animated.div\n            style={{\n              position: 'absolute',\n              top: '0',\n              left: '0',\n              width: '100%',\n              height: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              color: `${props.textColor}`,\n            }}\n          >\n            {/* {prop.width.to((x) => x.toFixed(0))} */}\n            {props.text}\n          </animated.div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}